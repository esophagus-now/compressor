// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _compressor_HH_
#define _compressor_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "compressor_faddfsbkb.h"
#include "compressor_fmul_3cud.h"
#include "compressor_fcmp_3dEe.h"
#include "compressor_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct compressor : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > in_V_TDATA;
    sc_in< sc_logic > in_V_TVALID;
    sc_out< sc_logic > in_V_TREADY;
    sc_out< sc_lv<32> > out_V_TDATA;
    sc_out< sc_logic > out_V_TVALID;
    sc_in< sc_logic > out_V_TREADY;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    compressor(sc_module_name name);
    SC_HAS_PROCESS(compressor);

    ~compressor();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    compressor_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* compressor_CTRL_BUS_s_axi_U;
    compressor_faddfsbkb<1,5,32,32,32>* compressor_faddfsbkb_U1;
    compressor_fmul_3cud<1,4,32,32,32>* compressor_fmul_3cud_U2;
    compressor_fcmp_3dEe<1,1,32,32,1>* compressor_fcmp_3dEe_U3;
    compressor_fcmp_3dEe<1,1,32,32,1>* compressor_fcmp_3dEe_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > in_V_0_data_out;
    sc_signal< sc_logic > in_V_0_vld_in;
    sc_signal< sc_logic > in_V_0_vld_out;
    sc_signal< sc_logic > in_V_0_ack_in;
    sc_signal< sc_logic > in_V_0_ack_out;
    sc_signal< sc_lv<32> > in_V_0_payload_A;
    sc_signal< sc_lv<32> > in_V_0_payload_B;
    sc_signal< sc_logic > in_V_0_sel_rd;
    sc_signal< sc_logic > in_V_0_sel_wr;
    sc_signal< sc_logic > in_V_0_sel;
    sc_signal< sc_logic > in_V_0_load_A;
    sc_signal< sc_logic > in_V_0_load_B;
    sc_signal< sc_lv<2> > in_V_0_state;
    sc_signal< sc_logic > in_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > out_V_1_data_out;
    sc_signal< sc_logic > out_V_1_vld_in;
    sc_signal< sc_logic > out_V_1_vld_out;
    sc_signal< sc_logic > out_V_1_ack_in;
    sc_signal< sc_logic > out_V_1_ack_out;
    sc_signal< sc_lv<32> > out_V_1_payload_A;
    sc_signal< sc_lv<32> > out_V_1_payload_B;
    sc_signal< sc_logic > out_V_1_sel_rd;
    sc_signal< sc_logic > out_V_1_sel_wr;
    sc_signal< sc_logic > out_V_1_sel;
    sc_signal< sc_logic > out_V_1_load_A;
    sc_signal< sc_logic > out_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_1_state;
    sc_signal< sc_logic > out_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > thresh;
    sc_signal< sc_lv<32> > slope;
    sc_signal< sc_logic > in_V_TDATA_blk_n;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > out_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<32> > grp_fu_77_p2;
    sc_signal< sc_lv<32> > reg_93;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_15_reg_305;
    sc_signal< sc_lv<1> > sel_tmp2_reg_310;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_81_p2;
    sc_signal< sc_lv<32> > reg_98;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > slope_read_reg_248;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > thresh_read_reg_253;
    sc_signal< sc_lv<32> > tmp_reg_261;
    sc_signal< sc_lv<1> > notlhs_fu_121_p2;
    sc_signal< sc_lv<1> > notlhs_reg_268;
    sc_signal< sc_lv<1> > notrhs_fu_127_p2;
    sc_signal< sc_lv<1> > notrhs_reg_273;
    sc_signal< sc_lv<32> > tmp_8_neg_fu_133_p2;
    sc_signal< sc_lv<32> > tmp_8_neg_reg_279;
    sc_signal< sc_lv<1> > notlhs8_fu_149_p2;
    sc_signal< sc_lv<1> > notlhs8_reg_284;
    sc_signal< sc_lv<1> > tmp_12_fu_184_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_289;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_14_fu_85_p2;
    sc_signal< sc_lv<1> > tmp_14_reg_295;
    sc_signal< sc_lv<1> > tmp_19_fu_89_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_300;
    sc_signal< sc_lv<1> > tmp_15_fu_203_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > sel_tmp2_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_22_fu_240_p3;
    sc_signal< sc_lv<32> > grp_fu_77_p0;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_19_fu_89_p0;
    sc_signal< sc_lv<32> > tmp_1_to_int_fu_103_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_107_p4;
    sc_signal< sc_lv<23> > tmp_1_fu_117_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_139_p4;
    sc_signal< sc_lv<32> > thresh_to_int_fu_155_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_158_p4;
    sc_signal< sc_lv<23> > tmp_10_fu_168_p1;
    sc_signal< sc_lv<1> > notrhs7_fu_178_p2;
    sc_signal< sc_lv<1> > notlhs6_fu_172_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_194_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_198_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_208_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_212_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_217_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_222_p2;
    sc_signal< sc_lv<32> > tmp_21_fu_234_p3;
    sc_signal< sc_lv<2> > grp_fu_77_opcode;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_state2;
    static const sc_lv<20> ap_ST_fsm_state3;
    static const sc_lv<20> ap_ST_fsm_state4;
    static const sc_lv<20> ap_ST_fsm_state5;
    static const sc_lv<20> ap_ST_fsm_state6;
    static const sc_lv<20> ap_ST_fsm_state7;
    static const sc_lv<20> ap_ST_fsm_state8;
    static const sc_lv<20> ap_ST_fsm_state9;
    static const sc_lv<20> ap_ST_fsm_state10;
    static const sc_lv<20> ap_ST_fsm_state11;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_state14;
    static const sc_lv<20> ap_ST_fsm_state15;
    static const sc_lv<20> ap_ST_fsm_state16;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_77_opcode();
    void thread_grp_fu_77_p0();
    void thread_in_V_0_ack_in();
    void thread_in_V_0_ack_out();
    void thread_in_V_0_data_out();
    void thread_in_V_0_load_A();
    void thread_in_V_0_load_B();
    void thread_in_V_0_sel();
    void thread_in_V_0_state_cmp_full();
    void thread_in_V_0_vld_in();
    void thread_in_V_0_vld_out();
    void thread_in_V_TDATA_blk_n();
    void thread_in_V_TREADY();
    void thread_notlhs6_fu_172_p2();
    void thread_notlhs8_fu_149_p2();
    void thread_notlhs_fu_121_p2();
    void thread_notrhs7_fu_178_p2();
    void thread_notrhs_fu_127_p2();
    void thread_out_V_1_ack_in();
    void thread_out_V_1_ack_out();
    void thread_out_V_1_data_out();
    void thread_out_V_1_load_A();
    void thread_out_V_1_load_B();
    void thread_out_V_1_sel();
    void thread_out_V_1_state_cmp_full();
    void thread_out_V_1_vld_in();
    void thread_out_V_1_vld_out();
    void thread_out_V_TDATA();
    void thread_out_V_TDATA_blk_n();
    void thread_out_V_TVALID();
    void thread_sel_tmp1_fu_222_p2();
    void thread_sel_tmp2_fu_228_p2();
    void thread_thresh_to_int_fu_155_p1();
    void thread_tmp_10_fu_168_p1();
    void thread_tmp_11_fu_194_p2();
    void thread_tmp_12_fu_184_p2();
    void thread_tmp_13_fu_198_p2();
    void thread_tmp_15_fu_203_p2();
    void thread_tmp_16_fu_139_p4();
    void thread_tmp_17_fu_208_p2();
    void thread_tmp_18_fu_212_p2();
    void thread_tmp_19_fu_89_p0();
    void thread_tmp_1_fu_117_p1();
    void thread_tmp_1_to_int_fu_103_p1();
    void thread_tmp_20_fu_217_p2();
    void thread_tmp_21_fu_234_p3();
    void thread_tmp_22_fu_240_p3();
    void thread_tmp_4_fu_107_p4();
    void thread_tmp_8_neg_fu_133_p2();
    void thread_tmp_9_fu_158_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
